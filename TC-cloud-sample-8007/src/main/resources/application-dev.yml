server:
  port: 8007
  servlet:
    context-path: /sample

#系统配置模块的微服务名称（注册成功进nacos的微服务提供者）
setting-service-url: http://tcsoft-data-platform-system-setting

mybatis-plus:
  global-config:
    db-config:
      logic-delete-field: flag  # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)

  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: false   # 关闭驼峰命名


spring:
  application:
    name: tcsoft-data-platform-sample

  redis:
    host: 106.14.77.81
    port: 6379
    password: TCsoft123..
    database: 0
    lettuce:
      pool:
        max-active: 32
        max-wait: 300ms
        max-idle: 16
        min-idle: 8

  datasource:
    username: root
    password: TCsoft123..
    url: jdbc:mysql://106.14.77.81:3306/sample?serverTimezone=Asia/Shanghai&userUnicode=true&CharacterEncoding=utf-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 配置数据库监控druid
    druid:
      # 记录慢的sql
      filter:
        stat:
          log-slow-sql: true
          enabled: true
          slow-sql-millis: 2000
      # 开启过滤器
      filters: stat,wall,log4j2
      # 启用stat-filter
      web-stat-filter:
        enabled: true
        url-pattern: "/**"
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        session-stat-enable: true
        session-stat-max-count: 1000

      ##### StatViewServlet配置 #######
      #启用内置的监控页面
      stat-view-servlet:
        enabled: true
        #内置监控页面的地址
        url-pattern: /druid/*
        #关闭 Reset All 功能
        reset-enable: false
        #设置登录用户名
        login-username: admin
        #设置登录密码
        login-password: 123
        #白名单（如果allow没有配置或者为空，则允许所有访问）
        allow: 127.0.0.1
        #黑名单（deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝）
#        deny:

  cloud:
    nacos:
      discovery:
        server-addr: 106.14.77.81:8848


    stream:
      kafka:
        binder:
          brokers: 192.168.3.3:9092         #Kafka的消息中间件服务器
          #          zk-nodes: localhost:2181        #Zookeeper的节点，如果集群，后面加,号分隔
          auto-create-topics: true        #如果设置为false,就不会自动创建Topic 有可能你Topic还没创建就直接调用了。
          auto-add-partitions: true
      bindings:
        #接受到的order放入和取出
        output:
          destination: ReceiveOrder    #消息发往的目的地
#          content-type: text/plain    #消息发送的格式，接收端不用指定格式，但是发送端要
          content-type: application/json    #消息发送的格式，接收端不用指定格式，但是发送端要
          producer:
            partitionCount: 1
        input:
          destination: ReceiveOrder
          group: ReceiveOrder-group
          consumer:
            partitioned: true   #开启分区

        #接收到的result放入和取出
        resultOutput:
          destination: ReceiveResult
          content-type: application/json
          producer:
            partitionCount: 1

        resultInput:
          destination: ReceiveResult
          group: ReceiveResult-group
          consumer:
            partitioned: true   #开启分区


